{
  "hash": "751f0bf32ab68740ac87ddf610226dfa",
  "result": {
    "engine": "jupyter",
    "markdown": "# Preface {.unnumbered}\n\nThis material shows how to use [Shiny for Python](https://shiny.posit.co/py/) to implement example apps and exerciese solutions for Hadley Wickham's [Mastering Shiny](https://www.oreilly.com/library/view/mastering-shiny/9781492047377/), which were originally implemented in R. My material will contain mostly only codes with few additional specific details of Shiny for Python, while it does not contain comprehensive explanation about Shiny framework. To understand Shiny framework, I highly recommend you to read Hadley Wickham's [Mastering Shiny](https://www.oreilly.com/library/view/mastering-shiny/9781492047377/) first, which [online version](https://mastering-shiny.org) is also available.\n\nThe followings are materials that I referenced while creating this material:\n\n- [Mastering Shiny](https://mastering-shiny.org) by Hadley Wickham\n- [Learn Shiny](https://shiny.posit.co/py/docs/overview.html) by Posit Inc. on Shiny for Python website\n- [Shiny R to Python translation guide](https://gist.github.com/wch/616934a6fe57636434154c112ac8a718) by Winston Chang\n- [Change Log for Shiny for Python](https://github.com/posit-dev/py-shiny/blob/main/CHANGELOG.md)\n\nAlso, I got answers from Shiny community on Discord when I asked questions about implementing several examples. I appreciate great helps from Gordon Shotwell, Joe Cheng, and the community!\n\nComputation environment is as follows:\n\n## Python\n\n### Python version\n\n::: {#b7544bba .cell execution_count=1}\n``` {.python .cell-code}\n!python --version\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nPython 3.11.9\r\n```\n:::\n:::\n\n\n### Packages\n\n::: {#8d9cbdea .cell execution_count=2}\n``` {.python .cell-code}\nwith open('requirements.txt', 'r') as f:\n    print(f.read())\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nanyio==4.2.0\nappdirs==1.4.4\nappnope==0.1.3\nargon2-cffi==23.1.0\nargon2-cffi-bindings==21.2.0\narrow==1.3.0\nasgiref==3.7.2\nasttokens==2.4.1\nasync-lru==2.0.4\natomicwrites==1.4.1\nattrs==23.1.0\nBabel==2.14.0\nbeautifulsoup4==4.12.2\nbleach==6.1.0\nbqplot==0.12.42\ncertifi==2023.11.17\ncffi==1.16.0\ncharset-normalizer==3.3.2\nclick==8.1.7\ncomm==0.2.0\ncontourpy==1.2.0\ncycler==0.12.1\ndebugpy==1.8.0\ndecorator==5.1.1\ndefusedxml==0.7.1\nentrypoints==0.4\nexecuting==2.0.1\nfaicons==0.2.1\nfastjsonschema==2.19.1\nfonttools==4.47.0\nfqdn==1.5.1\nfuzzywuzzy==0.18.0\ngapminder==0.1\ngast==0.4.0\nh11==0.14.0\nhaversine==2.8.1\nhtmltools==0.5.1\nidna==3.6\nipydatagrid==1.2.0\nipykernel==6.28.0\nipython==8.18.0\nipywidgets==8.1.1\nisoduration==20.11.0\njedi==0.19.1\njellyfish==0.11.2\nJinja2==3.1.2\njoblib==1.3.2\njson5==0.9.14\njsonpointer==2.4\njsonschema==4.20.0\njsonschema-specifications==2023.12.1\njupyter==1.0.0\njupyter-console==6.6.3\njupyter-events==0.9.0\njupyter-lsp==2.2.1\njupyter_client==8.6.0\njupyter_core==5.5.1\njupyter_server==2.12.1\njupyter_server_terminals==0.5.1\njupyterlab==4.0.10\njupyterlab-widgets==3.0.9\njupyterlab_pygments==0.3.0\njupyterlab_server==2.25.2\nkiwisolver==1.4.5\nlinkify-it-py==2.0.2\nmarkdown-it-py==3.0.0\nMarkupSafe==2.1.3\nmatplotlib==3.8.2\nmatplotlib-inline==0.1.6\nmdit-py-plugins==0.4.0\nmdurl==0.1.2\nmistune==3.0.2\nmizani==0.9.3\nmultipledispatch==1.0.0\nnatsort==8.4.0\nnbclient==0.9.0\nnbconvert==7.13.1\nnbformat==5.9.2\nnest-asyncio==1.5.8\nnotebook==7.0.6\nnotebook_shim==0.2.3\nnumpy==1.26.2\noverrides==7.4.0\npackaging==23.2\npandas==2.1.4\npandas-flavor==0.6.0\npandocfilters==1.5.0\npapermill==2.5.0\nparso==0.8.3\npathlib_mate==1.3.2\npatsy==0.5.5\npexpect==4.9.0\nPillow==10.1.0\nplatformdirs==4.1.0\nplotnine==0.12.4\nprettytable==3.10.0\nprometheus-client==0.19.0\nprompt-toolkit==3.0.36\npsutil==5.9.7\nptyprocess==0.7.0\npure-eval==0.2.2\npy2vega==0.6.1\npycparser==2.21\npydataset==0.2.0\nPygments==2.17.2\npyjanitor==0.26.0\npyparsing==3.1.1\npython-dateutil==2.8.2\npython-json-logger==2.0.7\npython-multipart==0.0.6\npytz==2023.3.post1\nPyYAML==6.0.1\npyzmq==25.1.2\nqgrid==1.3.1\nqtconsole==5.5.1\nQtPy==2.4.1\nquestionary==2.0.1\nreferencing==0.32.0\nrequests==2.31.0\nrfc3339-validator==0.1.4\nrfc3986-validator==0.1.1\nrpds-py==0.16.2\nscikit-learn==1.3.2\nscipy==1.11.4\nseaborn==0.13.0\nSend2Trash==1.8.2\nshiny==0.6.1.1\nshiny_validate==0.1\nshinyswatch==0.4.2\nshinywidgets==0.2.4\nsix==1.16.0\nsniffio==1.3.0\nsoupsieve==2.5\nSQLAlchemy==1.4.52\nsqlalchemy-mate==1.4.28.4\nstack-data==0.6.3\nstarlette==0.34.0\nstatsmodels==0.14.1\ntenacity==8.2.3\nterminado==0.18.0\nthreadpoolctl==3.2.0\ntinycss2==1.2.1\ntornado==6.4\ntqdm==4.66.1\ntraitlets==5.14.0\ntraittypes==0.2.1\ntypes-python-dateutil==2.8.19.14\ntyping_extensions==4.9.0\ntzdata==2023.4\nuc-micro-py==1.0.2\nuri-template==1.3.0\nurllib3==2.1.0\nuvicorn==0.25.0\nwatchfiles==0.21.0\nwcwidth==0.2.12\nwebcolors==1.13\nwebencodings==0.5.1\nwebsocket-client==1.7.0\nwebsockets==12.0\nwidgetsnbextension==4.0.9\nxarray==2024.1.1\n\n```\n:::\n:::\n\n\n## IDE\n\n### VS Code extensions\n\n- [Shiny extension for VS Code](https://marketplace.visualstudio.com/items?itemName=posit.shiny)\n\n",
    "supporting": [
      "index_files/figure-html"
    ],
    "filters": [],
    "includes": {}
  }
}